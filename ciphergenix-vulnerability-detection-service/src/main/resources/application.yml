server:
  port: 8081

spring:
  application:
    name: CIPHERGENIX-VULNERABILITY-DETECTION-SERVICE
  
  datasource:
    url: jdbc:postgresql://localhost:5432/ciphergenix_vulnerability_db
    username: ${DB_USERNAME:ciphergenix_user}
    password: ${DB_PASSWORD:ciphergenix_pass}
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: ciphergenix-vulnerability-detection-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
  
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI:http://localhost:8080/auth/realms/ciphergenix}

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER_URL:http://localhost:8761/eureka}
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# CipherGenix AI-Enhanced Configuration
ciphergenix:
  vulnerability-detection:
    # Legacy Statistical Detection (for comparison)
    data-poisoning:
      contamination-threshold: 0.1
      ensemble-weights:
        isolation-forest: 0.3
        one-class-svm: 0.25
        autoencoder: 0.25
        lof: 0.2
      statistical-tests:
        ks-test-threshold: 0.05
        jensen-shannon-threshold: 0.1
    
    # Legacy Adversarial Detection (for comparison)
    adversarial-detection:
      perturbation-threshold: 0.01
      mahalanobis-threshold: 2.5
      reconstruction-error-threshold: 0.05
      ensemble-weights:
        gradient-analysis: 0.35
        mahalanobis: 0.25
        reconstruction: 0.25
        statistical: 0.15

  # Advanced AI Model Configuration
  ai:
    # Global AI Settings
    enabled: true
    gpu-acceleration: ${GPU_ENABLED:false}
    model-cache-size: 100
    model-cache-ttl: 3600 # 1 hour
    
    # Training Configuration
    training:
      learning-rate: 0.001
      batch-size: 32
      epochs: 100
      validation-split: 0.2
      early-stopping: true
      patience: 10
      
    # Neural Network Model Architectures
    models:
      # Variational Autoencoder Configuration
      autoencoder:
        hidden-layers: [256, 128, 64, 32, 64, 128, 256]
        latent-dim: 32
        activation: relu
        output-activation: sigmoid
        dropout-rate: 0.2
        
      # GAN Configuration
      gan:
        discriminator-layers: [128, 64, 32, 16, 1]
        generator-layers: [16, 32, 64, 128, 256]
        latent-dim: 100
        learning-rate-d: 0.0002
        learning-rate-g: 0.0002
        
      # Transformer Configuration
      transformer:
        attention-heads: 8
        attention-dim: 128
        feedforward-dim: 512
        num-layers: 4
        dropout-rate: 0.1
        max-sequence-length: 512
        
      # Cache configuration for ML models
      cache:
        model-cache-size: 100
        model-cache-ttl: 3600 # 1 hour
    
    # Adversarial Detection AI Configuration
    adversarial:
      # CNN Architecture
      cnn-layers: [128, 64, 32, 16]
      cnn-kernel-size: 3
      cnn-stride: 1
      cnn-padding: 1
      
      # RNN Architecture
      rnn-units: 256
      rnn-layers: 2
      rnn-dropout: 0.3
      bidirectional: true
      
      # Attention Mechanism
      attention-dim: 128
      attention-heads: 8
      
      # ResNet Configuration
      resnet-blocks: 4
      resnet-filters: [64, 128, 256, 512]
      
      # Capsule Network
      capsule-dim: 16
      routing-iterations: 3
      
      # Ensemble Configuration
      ensemble-threshold: 0.6
      ensemble-weights:
        cnn: 0.18
        rnn: 0.16
        attention: 0.15
        resnet: 0.17
        capsule: 0.12
        siamese: 0.11
        aae: 0.11
      
      # Model-specific thresholds
      adaptive-thresholds:
        enabled: true
        complexity-factor: 0.15
        model-specific: true
      
      # Regularization
      dropout-rate: 0.3
      batch-norm: true
      weight-decay: 0.0001
    
    # Data Poisoning AI Configuration
    poisoning:
      # VAE Architecture
      vae-encoder-layers: [256, 128, 64, 32]
      vae-decoder-layers: [32, 64, 128, 256]
      vae-latent-dim: 32
      vae-beta: 1.0 # Beta-VAE parameter
      
      # Graph Neural Network
      gnn-hidden-dim: 128
      gnn-layers: 3
      gnn-aggregation: mean
      graph-attention: true
      
      # LSTM Configuration
      lstm-units: 128
      lstm-layers: 2
      lstm-dropout: 0.2
      
      # Ensemble Configuration
      ensemble-weights:
        vae: 0.20
        gan: 0.18
        transformer: 0.16
        conv: 0.15
        lstm: 0.16
        gnn: 0.15
      
      # Adaptive Learning
      meta-learning: true
      online-learning: false
      adaptation-rate: 0.01
    
    # Model Training and Optimization
    optimization:
      optimizer: adam
      lr-scheduler: cosine
      weight-initialization: xavier
      gradient-clipping: 1.0
      
      # Advanced Techniques
      mixed-precision: ${MIXED_PRECISION:false}
      gradient-accumulation: 4
      label-smoothing: 0.1
      
      # Regularization
      l1-regularization: 0.0001
      l2-regularization: 0.0001
      spectral-normalization: false
    
    # Inference Configuration
    inference:
      batch-inference: true
      max-batch-size: 64
      inference-timeout: 30000 # 30 seconds
      
      # Model Serving
      model-warmup: true
      async-inference: true
      result-caching: true
      
      # Performance Monitoring
      latency-tracking: true
      throughput-monitoring: true
      resource-monitoring: true
    
    # Experimental Features
    experimental:
      # Federated Learning
      federated-learning: false
      federated-rounds: 10
      
      # Neural Architecture Search
      nas-enabled: false
      nas-search-space: basic
      
      # Continual Learning
      continual-learning: false
      memory-replay: false
      
      # Explainable AI
      explainability: true
      attention-visualization: true
      feature-importance: true

# Logging Configuration
logging:
  level:
    com.ciphergenix: DEBUG
    ai.djl: INFO
    org.springframework.kafka: INFO
    org.hibernate.SQL: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/ciphergenix-vulnerability-detection.log
    max-size: 100MB
    max-history: 30

# Performance Tuning
server:
  tomcat:
    threads:
      max: 200
      min-spare: 10
    connection-timeout: 20000
    max-connections: 8192
    accept-count: 100
  
spring:
  jpa:
    properties:
      hibernate:
        jdbc:
          batch_size: 25
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
  
  kafka:
    producer:
      acks: 1
      retries: 3
      batch-size: 16384
      linger-ms: 5
      buffer-memory: 33554432
    consumer:
      fetch-min-size: 1024
      fetch-max-wait: 500ms
      max-poll-records: 500