server:
  port: 8081

spring:
  application:
    name: ciphergenix-vulnerability-detection-service
  
  datasource:
    url: jdbc:postgresql://localhost:5432/ciphergenix_vulnerability_db
    username: ${DB_USERNAME:ciphergenix_user}
    password: ${DB_PASSWORD:ciphergenix_pass}
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: ciphergenix-vulnerability-detection-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
  
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI:http://localhost:8080/auth/realms/ciphergenix}

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER_URL:http://localhost:8761/eureka}
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# CipherGenix specific configurations
ciphergenix:
  vulnerability-detection:
    # Data Poisoning Detection Configuration
    data-poisoning:
      contamination-threshold: 0.1
      ensemble-weights:
        isolation-forest: 0.3
        one-class-svm: 0.25
        autoencoder: 0.25
        lof: 0.2
      statistical-tests:
        ks-test-threshold: 0.05
        jensen-shannon-threshold: 0.1
    
    # Adversarial Attack Detection Configuration
    adversarial-detection:
      perturbation-threshold: 0.01
      mahalanobis-threshold: 2.5
      reconstruction-error-threshold: 0.05
      ensemble-weights:
        gradient-analysis: 0.35
        mahalanobis: 0.25
        reconstruction: 0.25
        statistical: 0.15
    
    # Model Configuration
    models:
      autoencoder:
        hidden-layers: [128, 64, 32, 64, 128]
        learning-rate: 0.001
        epochs: 100
        batch-size: 32
      
      # Cache configuration for ML models
      cache:
        model-cache-size: 100
        model-cache-ttl: 3600 # 1 hour in seconds

logging:
  level:
    com.ciphergenix: DEBUG
    org.springframework.kafka: INFO
    org.hibernate.SQL: DEBUG