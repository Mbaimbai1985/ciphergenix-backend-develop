package com.ciphergenix.vulnerabilitydetection.model;

import jakarta.persistence.*;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Map;

@Entity
@Table(name = "detection_results")
public class DetectionResult {
    
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    
    @Column(name = "session_id", nullable = false)
    private String sessionId;
    
    @Enumerated(EnumType.STRING)
    @Column(name = "detection_type", nullable = false)
    private DetectionType detectionType;
    
    @Column(name = "threat_score", nullable = false)
    private Double threatScore;
    
    @Column(name = "is_threat_detected", nullable = false)
    private Boolean isThreatDetected;
    
    @ElementCollection
    @CollectionTable(name = "anomalous_samples", joinColumns = @JoinColumn(name = "detection_result_id"))
    @Column(name = "sample_index")
    private List<Integer> anomalousSamples;
    
    @ElementCollection
    @CollectionTable(name = "detection_details", joinColumns = @JoinColumn(name = "detection_result_id"))
    @MapKeyColumn(name = "detail_key")
    @Column(name = "detail_value")
    private Map<String, String> detectionDetails;
    
    @Column(name = "confidence_score")
    private Double confidenceScore;
    
    @Column(name = "algorithm_used", nullable = false)
    private String algorithmUsed;
    
    @Column(name = "processing_time_ms")
    private Long processingTimeMs;
    
    @Column(name = "created_at", nullable = false)
    private LocalDateTime createdAt;
    
    @Column(name = "dataset_size")
    private Integer datasetSize;
    
    @Column(name = "model_version")
    private String modelVersion;
    
    // Constructors
    public DetectionResult() {
        this.createdAt = LocalDateTime.now();
    }
    
    public DetectionResult(String sessionId, DetectionType detectionType, Double threatScore, 
                          Boolean isThreatDetected, String algorithmUsed) {
        this();
        this.sessionId = sessionId;
        this.detectionType = detectionType;
        this.threatScore = threatScore;
        this.isThreatDetected = isThreatDetected;
        this.algorithmUsed = algorithmUsed;
    }
    
    // Getters and Setters
    public Long getId() {
        return id;
    }
    
    public void setId(Long id) {
        this.id = id;
    }
    
    public String getSessionId() {
        return sessionId;
    }
    
    public void setSessionId(String sessionId) {
        this.sessionId = sessionId;
    }
    
    public DetectionType getDetectionType() {
        return detectionType;
    }
    
    public void setDetectionType(DetectionType detectionType) {
        this.detectionType = detectionType;
    }
    
    public Double getThreatScore() {
        return threatScore;
    }
    
    public void setThreatScore(Double threatScore) {
        this.threatScore = threatScore;
    }
    
    public Boolean getIsThreatDetected() {
        return isThreatDetected;
    }
    
    public void setIsThreatDetected(Boolean isThreatDetected) {
        this.isThreatDetected = isThreatDetected;
    }
    
    public List<Integer> getAnomalousSamples() {
        return anomalousSamples;
    }
    
    public void setAnomalousSamples(List<Integer> anomalousSamples) {
        this.anomalousSamples = anomalousSamples;
    }
    
    public Map<String, String> getDetectionDetails() {
        return detectionDetails;
    }
    
    public void setDetectionDetails(Map<String, String> detectionDetails) {
        this.detectionDetails = detectionDetails;
    }
    
    public Double getConfidenceScore() {
        return confidenceScore;
    }
    
    public void setConfidenceScore(Double confidenceScore) {
        this.confidenceScore = confidenceScore;
    }
    
    public String getAlgorithmUsed() {
        return algorithmUsed;
    }
    
    public void setAlgorithmUsed(String algorithmUsed) {
        this.algorithmUsed = algorithmUsed;
    }
    
    public Long getProcessingTimeMs() {
        return processingTimeMs;
    }
    
    public void setProcessingTimeMs(Long processingTimeMs) {
        this.processingTimeMs = processingTimeMs;
    }
    
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }
    
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }
    
    public Integer getDatasetSize() {
        return datasetSize;
    }
    
    public void setDatasetSize(Integer datasetSize) {
        this.datasetSize = datasetSize;
    }
    
    public String getModelVersion() {
        return modelVersion;
    }
    
    public void setModelVersion(String modelVersion) {
        this.modelVersion = modelVersion;
    }
}